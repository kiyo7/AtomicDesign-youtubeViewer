{"version":3,"file":"main.1fc2742e53638bc4ab48.hot-update.js","sources":["webpack:///./src/components/atoms/Typography/index.jsx","webpack:///./src/components/atoms/Typography/index.stories.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\n\nconst sizeMap = {\n  xs: css`\n    font-size: 12px;\n    line-height: 1.66;\n  `,\n  s: css`\n    font-size: 14px;\n    line-height: 1.66;\n  `,\n  m: css`\n    font-size: 16px;\n    line-height: 1.66;\n  `,\n  subtitle: css`\n    font-size: 18px;\n    line-height: 1.66;\n  `,\n  title: css`\n    font-size: 20px;\n    line-height: 1.66;\n  `,\n};\n\nconst colorsMap = {\n  inherit: \"inherit\",\n  black: \"#000000\",\n  red: \"#ff3300\",\n  gray: \"#8c8c8c\",\n};\n\nexport const sizes = Object.keys(sizeMap);\nexport const colors = Object.keys(colorsMap);\nexport const displays = [\"initial\", \"block\", \"inline\", \"inline-block\"];\nexport const aligns = [\"left\", \"right\", \"center\"];\n\nconst Root = styled.p`\n  margin: 0;\n  color: ${({ color }) => colorsMap[color]};\n  ${({ size }) => sizeMap[size]};\n  display: ${({ display }) => display};\n  text-align: ${({ align }) => align};\n  font-weight: ${({ bold }) => (bold ? \"bold\" : \"normal\")};\n`;\n\nconst Typography = ({\n  className,\n  size,\n  color,\n  display,\n  align,\n  bold,\n  children,\n}) => (\n  // 各プロパティをStyled componentで作成したRootに渡す\n  <Root\n    className={className}\n    size={size}\n    color={color}\n    display={display}\n    align={align}\n    bold={bold}\n  >\n    {children}\n  </Root>\n);\n\nTypography.propTypes = {\n  className: PropTypes.string,\n  size: PropTypes.oneOf(sizes),\n  color: PropTypes.oneOf(colors),\n  display: PropTypes.oneOf(displays),\n  align: PropTypes.oneOf(aligns),\n  bold: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nTypography.defaultProps = {\n  className: \"\",\n  size: \"m\",\n  color: \"inherit\",\n  align: \"left\",\n  bold: false,\n  display: \"block\",\n};\n\nexport default Typography;\n","import React from \"react\";\nimport Typography, { colors, sizes, aligns } from \".\";\n\nexport default { title: \"atoms/Typography\" };\n\nconst sampleText = \"このコンポーネントはTypographyです\";\n\nexport const colorVariation = () =>\n  colors.map((c) => (\n    <Typography key={c} color={c}>\n      {c}.{sampleText}\n    </Typography>\n  ));\ncolorVariation.story = { name: \"color\" };\n\nexport const sizeVariation = () =>\n  sizes.map((s) => (\n    <Typography key={s} size={s}>\n      {s}.{sampleText}\n    </Typography>\n  ));\nsizeVariation.story = {\n  name: \"size\",\n};\n\nexport const bold = () =>\n  sizes.map((s) => (\n    <Typography key={s} size={s} bold>\n      {s}.{sampleText}\n    </Typography>\n  ));\n\nexport const displayBlock = () => (\n  <>\n    <Typography display=\"block\">{sampleText}</Typography>\n    <Typography display=\"block\">{sampleText}</Typography>\n  </>\n);\ndisplayBlock.story = {\n  name: 'display=\"block\"',\n};\n\nexport const displayInline = () => (\n  <>\n    <Typography display=\"inline\">{sampleText}</Typography>\n    <Typography display=\"inline\">{sampleText}</Typography>\n  </>\n);\ndisplayInline.story = {\n  name: 'display=\"inline\"',\n};\n\nexport const displayInlineBlock = () => (\n  <>\n    <Typography display=\"inline-block\" style={{ width: \"100px\" }}>\n      {sampleText}\n    </Typography>\n    <Typography display=\"inline-block\" style={{ width: \"100px\" }}>\n      {sampleText}\n    </Typography>\n  </>\n);\n\ndisplayInlineBlock.story = {\n  name: 'display=\"inline-block\"',\n};\n\nexport const align = () =>\n  aligns.map((a) => (\n    <Typography key={a} align={a}>\n      {a}.{sampleText}\n    </Typography>\n  ));\nalign.story = {\n  name: \"align\",\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AAIA;AAIA;AAIA;AAIA;AAjBA;AAuBA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAVA;AAAA;AACA;AADA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;;;;AAEA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AADA;AAMA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AADA;AAMA;AACA;AADA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AADA;AAOA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AADA;AAMA;AACA;AADA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AADA;AAMA;AACA;AADA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AAWA;AACA;AADA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AADA;AAMA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}