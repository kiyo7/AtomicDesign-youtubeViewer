{"version":3,"file":"main.e778d603a0593f8137e9.hot-update.js","sources":["webpack:///./src/components/atoms/Button/index.jsx","webpack:///./src/components/atoms/Input/index.jsx","webpack:///./src/components/atoms/Spinner/index.jsx","webpack:///./src/components/atoms/Spinner/index.stories.jsx","webpack:///./src/components/atoms/Typography/index.jsx","webpack:///./src/components/pages/TopPage/index.jsx","webpack:///./src/style/GlobalStyle.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\n\nexport const sizes = [\"s\", \"m\", \"l\"];\nconst Root = styled.button`\n  ${({ fullWidth }) =>\n    fullWidth &&\n    css`\n      width: 100%;\n    `};\n  appearance: none;\n  border: 0;\n  border-radius: 4px;\n  background: #ddd;\n  color: #000;\n  font-weight: bold;\n  cursor: pointer;\n  :hover {\n    background: #eee;\n  }\n  //focusはインプットタグにテキストを入力している時とか\n  :focus {\n    outline: none;\n    box-shadow: 0 0 0 4px #cbd6ee;\n  }\n  //アニメーション的なやつ↓\n  transition: background-color 0.1s linear;\n  ${({ size }) => {\n    switch (size) {\n      case \"s\":\n        return css`\n          font-size: 12px;\n          padding: 6px 12px;\n        `;\n      case \"l\":\n        return css`\n          font-size: 18px;\n          padding: 10px 18px;\n        `;\n      default:\n        return css`\n          font-size: 16px;\n          padding: 6px 16px;\n        `;\n    }\n  }};\n`;\n\nconst Button = ({ className, children, type, size, fullWidth, onClick }) => (\n  <Root\n    className={className}\n    type={type}\n    size={size}\n    fullWidth={fullWidth}\n    onClick={onClick}\n  >\n    {children}\n  </Root>\n);\n\nButton.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  type: PropTypes.string,\n  size: PropTypes.oneOf(sizes),\n  fullWidth: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  className: \"\",\n  type: \"button\",\n  size: \"m\",\n  fullWidth: false,\n  onClick: null,\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Root = styled.input`\n  width: 100%;\n  padding: 10px 15px;\n  font-size: 16px;\n  border-radius: 4px;\n  border: 2px solid #ddd;\n  box-sizing: border-box;\n  :focus {\n    border-color: rgba(100, 100, 255, 0.5);\n  }\n  ::placeholder {\n    color: #ddd;\n  }\n`;\n\nexport const InputPresenter = ({\n  className,\n  onChange,\n  defaultValue,\n  placeholder,\n}) => (\n  <Root\n    className={className}\n    defaultValue={defaultValue}\n    onChange={onChange}\n    placeholder={placeholder}\n  />\n);\n\nInputPresenter.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  defaultValue: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nInputPresenter.defaultProps = {\n  className: \"\",\n  onChange: null,\n  defaultValue: \"\",\n  placeholder: \"\",\n};\n\nexport const InputContainer = ({\n  className,\n  onChange,\n  defaultValue,\n  placeholder,\n  presenter,\n}) => {\n  const [value, setValue] = useState(defaultValue);\n  return presenter({\n    className,\n    onChange: (e) => {\n      // 入力値が変更された時のハンドラ\n      const { value: newValue } = e.target;\n      if (newValue === value) {\n        // 値が変更されていなければ何もしない\n        return;\n      }\n      setValue(newValue);\n      onChange(newValue); // 親コンポーネントから渡されたonChangeを呼ぶ\n    },\n    defaultValue,\n    placeholder,\n  });\n};\n\nInputContainer.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  defaultValue: PropTypes.string,\n  placeholder: PropTypes.string,\n  presenter: PropTypes.func.isRequired,\n};\n\nInputContainer.defaultProps = {\n  className: \"\",\n  onChange: null,\n  defaultValue: \"\",\n  placeholder: \"\",\n};\n\nexport default (props) => (\n  <InputContainer presenter={InputPresenter} {...props} />\n);\n","import styled, { keyframes } from \"styled-components\";\n\nconst loopSpinKeyFrame = keyframes`\n0% { \n    transform: rotate(0deg);\n}\n100%{\n    transform: rotate(360deg)\n    }\n    `;\n\nconst size = \"24px\";\n\nexport default styled.span`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  width: ${size};\n  height: ${size};\n  border-radius: 50%;\n  border: 8px solid #ccd5dc;\n  border-right-color: transparent;\n  animation: ${loopSpinKeyFrame} 1s linear infinite;\n`;\n","import React from \"react\";\nimport Spinner from \".\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\n\nconst sizeMap = {\n  xs: css`\n    font-size: 12px;\n    line-height: 1.66;\n  `,\n  s: css`\n    font-size: 14px;\n    line-height: 1.66;\n  `,\n  m: css`\n    font-size: 16px;\n    line-height: 1.66;\n  `,\n  subtitle: css`\n    font-size: 18px;\n    line-height: 1.66;\n  `,\n  title: css`\n    font-size: 20px;\n    line-height: 1.66;\n  `,\n};\n\nconst colorsMap = {\n  inherit: \"inherit\",\n  black: \"#000000\",\n  red: \"#ff3300\",\n  gray: \"#8c8c8c\",\n};\n\nexport const sizes = Object.keys(sizeMap);\nexport const colors = Object.keys(colorsMap);\nexport const displays = [\"initial\", \"block\", \"inline\", \"inline-block\"];\nexport const aligns = [\"left\", \"right\", \"center\"];\n\nconst Root = styled.p`\n  margin: 0;\n  color: ${({ color }) => colorsMap[color]};\n  ${({ size }) => sizeMap[size]};\n  display: ${({ display }) => display};\n  text-align: ${({ align }) => align};\n  font-weight: ${({ bold }) => (bold ? \"bold\" : \"normal\")};\n`;\n\nconst Typography = ({\n  className,\n  size,\n  color,\n  display,\n  align,\n  bold,\n  children,\n}) => (\n  // 各プロパティをStyled componentで作成したRootに渡す\n  <Root\n    className={className}\n    size={size}\n    color={color}\n    display={display}\n    align={align}\n    bold={bold}\n  >\n    {children}\n  </Root>\n);\n\nTypography.propTypes = {\n  className: PropTypes.string,\n  size: PropTypes.oneOf(sizes),\n  color: PropTypes.oneOf(colors),\n  display: PropTypes.oneOf(displays),\n  align: PropTypes.oneOf(aligns),\n  bold: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nTypography.defaultProps = {\n  className: \"\",\n  size: \"m\",\n  color: \"inherit\",\n  align: \"left\",\n  bold: false,\n  display: \"block\",\n};\n\nexport default Typography;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  background: #e5e5e5;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n`;\n\nconst Title = styled.h1`\n  font-size: 30px;\n  font-weight: bold;\n  color: #ff3300;\n`;\n\nconst TopPage = () => (\n  <Root>\n    <Title>ここはトップページです</Title>\n    <Link to=\"/play/hoge\">動画再生ページへ</Link>\n  </Root>\n);\n\nexport default TopPage;\n","import { createGlobalStyle } from \"styled-components\";\n\n//↓タグ付テンプレートリテラル構文\nexport default createGlobalStyle`\n  html,body,#root {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    position: relative;\n  }\n`;\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAsBA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAZA;AAiBA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AADA;AACA;AADA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AANA;AAAA;AAcA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAbA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AACA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AAAA;AAEA;AASA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;;AAEA;AACA;AAIA;AAIA;AAIA;AAIA;AAjBA;AAuBA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAVA;AAAA;AACA;AADA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;AACA;;;;;;;;;;;;;;;;;;;;AC1FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AADA;AACA;AADA;;;;;;AAOA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAEA;;;;A","sourceRoot":""}